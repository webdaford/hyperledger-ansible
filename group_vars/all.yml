---
# file: group_vars/all.yml
# This file has variable definitions for all machines

# Apt
#----------------------------------------------------------------
# The "cache_horizon" is how many seconds old the cache contents
# must be before the cache will be updated again.
# 2 hours * 3600 seconds per hour
cache_horizon: 7200

# System identification
#----------------------------------------------------------------
is_arch: "{{ ansible_distribution  == 'Archlinux' }}"
is_ubuntu: "{{ ansible_distribution  == 'Ubuntu' }}"
is_ubuntu_15_10: "{{ is_ubuntu and ansible_distribution_version == '15.10' }}"
is_ubuntu_16_04: "{{ is_ubuntu and ansible_distribution_version == '16.04' }}"
is_ubuntu_16_10: "{{ is_ubuntu and ansible_distribution_version == '16.10' }}"

is_debian: "{{ ansible_distribution == 'Debian' or is_ubuntu or is_linuxmint }}" 
is_fedora: "{{ ansible_pkg_mgr == 'yum' }}"
is_linuxmint: "{{ ansible_distribution == 'Linuxmint' }}"
is_linux:  "{{ is_debian or is_ubuntu or is_fedora or is_arch }}"
is_macosx: "{{ ansible_distribution == 'MacOSX'}}"
is_unix: "{{ is_linux or is_macosx }}"

is_virtual_machine: "{{ (ansible_virtualization_role is defined) and (ansible_virtualization_role in [ 'guest' ]) }}"

# Package Managers
#----------------------------------------------------------------
is_apt_pkg_mgr: "{{ ansible_pkg_mgr == 'apt' }}"        # Debian
is_yum_pkg_mgr: "{{ ansible_pkg_mgr == 'yum' }}"        # Fedora, CentOS
is_pacman_pkg_mgr: "{{ ansible_pkg_mgr == 'pacman' }}"  # Arch
is_opkg_pkg_mgr: "{{ ansible_pkg_mgr == 'opkg' }}"      # Angstrom

# Hyperledger General
#----------------------------------------------------------------
# Ansible version >= 2.1 is required to use the Docker 
# modules (e.g., docker_service) introduced in 2.1.
# This will be asserted by all of the playbooks.
hl_minimum_ansible_version_major: 2
hl_minimum_ansible_version_minor: 1

# Hyperledger
hl_num_validating_peers: 8

# The "type" of fabric to launch. (Options: "configurable", "behave_4_noops")
hl_fabric_type: "configurable"

hl_vpeer_docker_image: "yeasy/hyperledger-peer"
hl_msvc_docker_image: "yeasy/hyperledger-membersrvc" 

# This is the identifier to use for network domains, etc.
hl_identifier: hyperledger

# Change this for your network.
hl_network_subnet: "10.12.34"

# This is the machine that will run the consul and swarm managers.
# Change this for your network.
hl_main_server_ip: "{{hl_network_subnet}}.92"

# Networking
# This string is used by the Jinja2 ipaddr filter to find the ip address of a host
# that should be used when it "binds" or advertises how others should connect to it.
# You'll see the pattern below used to find the correct ip address (or potentially many)
# to use.  It takes all of the ipv4 addresses of the host, filters out the ones that
# don't match the filter, and then selects one at "random."  In the last case there should
# only be one that matches the filter, so the result is just one address (random is used
# to make it easier to extract from the list return by the ipaddr filter, and handles the
# case where there might be more than one DAF)
# {{ ansible_all_ipv4_addresses | ipaddr(hl_addr_ip_filter) | random }} 
# Change this for your network.
#hl_addr_ip_filter: "{{hl_network_subnet}}.0/24"
# This filter will match with host ip addresses like 10.12.34.10 and 10.12.35.6
# Change this for your network.
hl_addr_ip_filter: "10.12.0.0/16"

# Docker
hl_docker_tcp_port: 2375

# Consul
hl_consul_server_ip: "{{hl_main_server_ip}}"
hl_consul_port: 8500
hl_consul_dns_port: 8600
hl_consul_datacenter_identifier: keoja0

# Swarm Overlay network 
hl_swarm_manager_ip: "{{hl_main_server_ip}}"
hl_swarm_manager_port: 4000
hl_overlay_network_subnet: 10.12.36
hl_overlay_network_name: "{{hl_identifier}}"
hl_overlay_network_addr_ip_filter: "{{hl_overlay_network_subnet}}.0/24"

# Docker Compose
hl_docker_compose_version: 1.7.1
hl_docker_host_ip: "{{hl_swarm_manager_ip}}"
hl_docker_host_port: "{{hl_swarm_manager_port}}"

